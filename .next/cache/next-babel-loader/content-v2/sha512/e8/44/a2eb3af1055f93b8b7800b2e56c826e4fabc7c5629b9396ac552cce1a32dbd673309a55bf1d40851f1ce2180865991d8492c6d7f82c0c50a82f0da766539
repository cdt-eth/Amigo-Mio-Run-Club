{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/christianturner/Dev/Personal/React/strava/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/christianturner/Dev/Personal/React/strava/stores/authContext.js\",\n    _this = this;\n\nimport { createContext } from \"react\"; // using global context to log in/out user anywhere in the app\n\nvar AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  login: function login() {},\n  logout: function logout() {},\n  authReady: false // false until user credentials has been validated\n\n});\n\nvar _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n\nexport var AuthContextProvider = function AuthContextProvider(_ref) {\n  var children = _ref.children;\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: \"user\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, _this);\n};\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/christianturner/Dev/Personal/React/strava/stores/authContext.js"],"names":["createContext","AuthContext","user","login","logout","authReady","useState","setUser","AuthContextProvider","children"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,OAA9B,C,CAEA;;AAEA,IAAMC,WAAW,gBAAGD,aAAa,CAAC;AAChCE,EAAAA,IAAI,EAAE,IAD0B;AAEhCC,EAAAA,KAAK,EAAE,iBAAM,CAAE,CAFiB;AAGhCC,EAAAA,MAAM,EAAE,kBAAM,CAAE,CAHgB;AAIhCC,EAAAA,SAAS,EAAE,KAJqB,CAId;;AAJc,CAAD,CAAjC;;gBAOwBC,QAAQ,CAAC,EAAD,C;;IAAzBJ,I;IAAMK,O;;AAEb,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACnD,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAC,MAA5B;AAAA,cAAoCA;AAApC;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAFM;KAAMD,mB;AAIb,eAAeP,WAAf","sourcesContent":["import { createContext } from \"react\";\n\n// using global context to log in/out user anywhere in the app\n\nconst AuthContext = createContext({\n  user: null,\n  login: () => {},\n  logout: () => {},\n  authReady: false, // false until user credentials has been validated\n});\n\nconst [user, setUser] = useState(\"\");\n\nexport const AuthContextProvider = ({ children }) => {\n  return <AuthContext.Provider value=\"user\">{children}</AuthContext.Provider>;\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}