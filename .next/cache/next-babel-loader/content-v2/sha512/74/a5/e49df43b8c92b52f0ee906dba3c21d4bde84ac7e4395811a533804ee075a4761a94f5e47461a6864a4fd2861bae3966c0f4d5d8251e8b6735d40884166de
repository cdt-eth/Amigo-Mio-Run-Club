{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/christianturner/Dev/Personal/React/strava/stores/authContext.js\",\n    _this = this;\n\nimport { createContext, useState, useEffect } from \"react\"; // using global context to log in/out user anywhere in the app\n\nvar AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  login: function login() {},\n  logout: function logout() {},\n  authReady: false // false until user credentials has been validated\n\n});\n\nvar _useState = useState(null),\n    user = _useState[0],\n    setUser = _useState[1];\n\nexport var AuthContextProvider = function AuthContextProvider(_ref) {\n  var children = _ref.children;\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: user,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, _this);\n};\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/christianturner/Dev/Personal/React/strava/stores/authContext.js"],"names":["createContext","useState","useEffect","AuthContext","user","login","logout","authReady","setUser","AuthContextProvider","children"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD,C,CAEA;;AACA,IAAMC,WAAW,gBAAGH,aAAa,CAAC;AAChCI,EAAAA,IAAI,EAAE,IAD0B;AAEhCC,EAAAA,KAAK,EAAE,iBAAM,CAAE,CAFiB;AAGhCC,EAAAA,MAAM,EAAE,kBAAM,CAAE,CAHgB;AAIhCC,EAAAA,SAAS,EAAE,KAJqB,CAId;;AAJc,CAAD,CAAjC;;gBAOwBN,QAAQ,CAAC,IAAD,C;IAAzBG,I;IAAMI,O;;AAEb,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACnD,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEN,IAA7B;AAAA,cAAoCM;AAApC;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAFM;KAAMD,mB;AAIb,eAAeN,WAAf","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\n\n// using global context to log in/out user anywhere in the app\nconst AuthContext = createContext({\n  user: null,\n  login: () => {},\n  logout: () => {},\n  authReady: false, // false until user credentials has been validated\n});\n\nconst [user, setUser] = useState(null);\n\nexport const AuthContextProvider = ({ children }) => {\n  return <AuthContext.Provider value={user}>{children}</AuthContext.Provider>;\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}